// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using chuyenNganh.websiteBanGiay.Data;

#nullable disable

namespace chuyenNganh.websiteBanGiay.Migrations
{
    [DbContext(typeof(ChuyenNganhContext))]
    [Migration("20241117043145_AddNewColumnsToUsers")]
    partial class AddNewColumnsToUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cart_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Active");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_ID");

                    b.HasKey("CartId")
                        .HasName("PK__Carts__D6AB58B9BD071A00");

                    b.HasIndex(new[] { "UserId" }, "IX_Carts_User_ID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CartItem_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<int?>("CartId")
                        .HasColumnType("int")
                        .HasColumnName("Cart_ID");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceAtTime")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Price_AtTime");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("CartItemId")
                        .HasName("PK__CartItem__7B6515210AF7CCA4");

                    b.HasIndex(new[] { "CartId" }, "IX_CartItems_Cart_ID");

                    b.HasIndex(new[] { "ProductId" }, "IX_CartItems_Product_ID");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Category_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("Category_Name");

                    b.Property<DateOnly?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(CONVERT([date],getdate()))");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image_Url");

                    b.HasKey("CategoryId")
                        .HasName("PK__Category__6DB38D6E6C123FB1");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.MailConfirmation", b =>
                {
                    b.Property<int>("MailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Mail_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MailId"));

                    b.Property<bool?>("EmailSent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Email_Sent");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_ID");

                    b.Property<DateTime?>("SentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Sent_Date");

                    b.HasKey("MailId")
                        .HasName("PK__MailConf__8C1804FE6B01F6D2");

                    b.HasIndex(new[] { "OrderId" }, "IX_MailConfirmations_Order_ID");

                    b.ToTable("MailConfirmations");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Order_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Order_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("OrderStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Order_Status");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Phone_Number");

                    b.Property<string>("ShippingAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Shipping_Address");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Total_Amount");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_ID");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__F1E4639B157A77E9");

                    b.HasIndex(new[] { "UserId" }, "IX_Orders_User_ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderItem_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_ID");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("OrderItemId")
                        .HasName("PK__OrderIte__2F3022E2DEB81285");

                    b.HasIndex(new[] { "OrderId" }, "IX_OrderItems_Order_ID");

                    b.HasIndex(new[] { "ProductId" }, "IX_OrderItems_Product_ID");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Category_Id");

                    b.Property<DateOnly?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("Created_Date")
                        .HasDefaultValueSql("(CONVERT([date],getdate()))");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image_Url");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Product_Name");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__9834FB9A7FF045B6");

                    b.HasIndex(new[] { "CategoryId" }, "IX_Products_Category_Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.ProductSize", b =>
                {
                    b.Property<int>("ProductSizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductSize_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductSizeId"));

                    b.Property<decimal>("PriceAtTime")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Price_AtTime");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ProductSizeId")
                        .HasName("PK__ProductS__A38AFB05FB617754");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductSize", (string)null);
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Review_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReviewDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Review_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_ID");

                    b.HasKey("ReviewId")
                        .HasName("PK__Reviews__F85DA7EBEF2F83A8");

                    b.HasIndex(new[] { "ProductId" }, "IX_Reviews_Product_ID");

                    b.HasIndex(new[] { "UserId" }, "IX_Reviews_User_ID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("User_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateOnly?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("Created_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Full_Name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Role")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_Name");

                    b.HasKey("UserId")
                        .HasName("PK__Users__206D9190324CF44D");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.WishList", b =>
                {
                    b.Property<int>("WishListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WishList_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WishListId"));

                    b.Property<DateTime?>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Added_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_ID");

                    b.HasKey("WishListId")
                        .HasName("PK__WishList__57A3DD8FA6F7C96A");

                    b.HasIndex(new[] { "ProductId" }, "IX_WishList_Product_ID");

                    b.HasIndex(new[] { "UserId" }, "IX_WishList_User_ID");

                    b.ToTable("WishList", (string)null);
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.Cart", b =>
                {
                    b.HasOne("chuyenNganh.websiteBanGiay.Data.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Carts__User_ID__4222D4EF");

                    b.Navigation("User");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.CartItem", b =>
                {
                    b.HasOne("chuyenNganh.websiteBanGiay.Data.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__CartItems__Cart___46E78A0C");

                    b.HasOne("chuyenNganh.websiteBanGiay.Data.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__CartItems__Produ__47DBAE45");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.MailConfirmation", b =>
                {
                    b.HasOne("chuyenNganh.websiteBanGiay.Data.Order", "Order")
                        .WithMany("MailConfirmations")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__MailConfi__Order__5CD6CB2B");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.Order", b =>
                {
                    b.HasOne("chuyenNganh.websiteBanGiay.Data.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Orders__User_ID__4AB81AF0");

                    b.Navigation("User");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.OrderItem", b =>
                {
                    b.HasOne("chuyenNganh.websiteBanGiay.Data.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderItem__Order__4E88ABD4");

                    b.HasOne("chuyenNganh.websiteBanGiay.Data.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__OrderItem__Produ__4F7CD00D");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.Product", b =>
                {
                    b.HasOne("chuyenNganh.websiteBanGiay.Data.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Products_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.ProductSize", b =>
                {
                    b.HasOne("chuyenNganh.websiteBanGiay.Data.Product", "Product")
                        .WithMany("ProductSizes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ProductSi__Produ__02FC7413");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.Review", b =>
                {
                    b.HasOne("chuyenNganh.websiteBanGiay.Data.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Reviews__Product__52593CB8");

                    b.HasOne("chuyenNganh.websiteBanGiay.Data.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Reviews__User_ID__534D60F1");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.WishList", b =>
                {
                    b.HasOne("chuyenNganh.websiteBanGiay.Data.Product", "Product")
                        .WithMany("WishLists")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__WishList__Produc__59063A47");

                    b.HasOne("chuyenNganh.websiteBanGiay.Data.User", "User")
                        .WithMany("WishLists")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__WishList__User_I__5812160E");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.Order", b =>
                {
                    b.Navigation("MailConfirmations");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("OrderItems");

                    b.Navigation("ProductSizes");

                    b.Navigation("Reviews");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("chuyenNganh.websiteBanGiay.Data.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("WishLists");
                });
#pragma warning restore 612, 618
        }
    }
}
